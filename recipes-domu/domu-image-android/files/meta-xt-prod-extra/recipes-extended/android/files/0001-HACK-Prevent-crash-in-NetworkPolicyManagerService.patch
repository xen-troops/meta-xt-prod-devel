From b00427963e0d96dfac4b94c92f0f3e17fcfef1fd Mon Sep 17 00:00:00 2001
From: Andrii Chepurnyi <andrii_chepurnyi@epam.com>
Date: Thu, 3 Jan 2019 22:28:47 +0200
Subject: [PATCH] HACK: Prevent crash in NetworkPolicyManagerService

Do not crash if UsageStatsManagerInternal not functional.

Change-Id: Ic2473b269308bb2eeaa81503c95f2722fe0ac265
Signed-off-by: Andrii Chepurnyi <andrii_chepurnyi@epam.com>
---
 .../server/net/NetworkPolicyManagerService.java    | 28 ++++++++++++----------
 1 file changed, 16 insertions(+), 12 deletions(-)

diff --git a/services/core/java/com/android/server/net/NetworkPolicyManagerService.java b/services/core/java/com/android/server/net/NetworkPolicyManagerService.java
index ab482bb..9a33a6a 100644
--- a/services/core/java/com/android/server/net/NetworkPolicyManagerService.java
+++ b/services/core/java/com/android/server/net/NetworkPolicyManagerService.java
@@ -850,8 +850,8 @@ public class NetworkPolicyManagerService extends INetworkPolicyManager.Stub {
             // listen for meteredness changes
             mContext.getSystemService(ConnectivityManager.class).registerNetworkCallback(
                     new NetworkRequest.Builder().build(), mNetworkCallback);
-
-            mUsageStats.addAppIdleStateChangeListener(new AppIdleStateChangeListener());
+            if (mUsageStats != null)
+                mUsageStats.addAppIdleStateChangeListener(new AppIdleStateChangeListener());
 
             // Listen for subscriber changes
             mContext.getSystemService(SubscriptionManager.class).addOnSubscriptionsChangedListener(
@@ -3642,14 +3642,16 @@ public class NetworkPolicyManagerService extends INetworkPolicyManager.Stub {
             final List<UserInfo> users = mUserManager.getUsers();
             for (int ui = users.size() - 1; ui >= 0; ui--) {
                 UserInfo user = users.get(ui);
-                int[] idleUids = mUsageStats.getIdleUidsForUser(user.id);
-                for (int uid : idleUids) {
-                    if (!mPowerSaveTempWhitelistAppIds.get(UserHandle.getAppId(uid), false)) {
-                        // quick check: if this uid doesn't have INTERNET permission, it
-                        // doesn't have network access anyway, so it is a waste to mess
-                        // with it here.
-                        if (hasInternetPermissions(uid)) {
-                            uidRules.put(uid, FIREWALL_RULE_DENY);
+                if (mUsageStats != null) {
+                    int[] idleUids = mUsageStats.getIdleUidsForUser(user.id);
+                    for (int uid : idleUids) {
+                        if (!mPowerSaveTempWhitelistAppIds.get(UserHandle.getAppId(uid), false)) {
+                            // quick check: if this uid doesn't have INTERNET permission, it
+                            // doesn't have network access anyway, so it is a waste to mess
+                            // with it here.
+                            if (hasInternetPermissions(uid)) {
+                                uidRules.put(uid, FIREWALL_RULE_DENY);
+                            }
                         }
                     }
                 }
@@ -3685,7 +3687,9 @@ public class NetworkPolicyManagerService extends INetworkPolicyManager.Stub {
      * changed.
      */
     void updateRulesForAppIdleParoleUL() {
-        boolean paroled = mUsageStats.isAppIdleParoleOn();
+        boolean paroled = false;
+        if (mUsageStats != null)
+            paroled = mUsageStats.isAppIdleParoleOn();
         boolean enableChain = !paroled;
         enableFirewallChainUL(FIREWALL_CHAIN_STANDBY, enableChain);
 
@@ -3856,7 +3860,7 @@ public class NetworkPolicyManagerService extends INetworkPolicyManager.Stub {
 
         if (packages != null) {
             for (String packageName : packages) {
-                if (!mUsageStats.isAppIdle(packageName, uid, userId)) {
+                if ((mUsageStats != null) && (!mUsageStats.isAppIdle(packageName, uid, userId))) {
                     return false;
                 }
             }
-- 
2.7.4

