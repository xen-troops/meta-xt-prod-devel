From be567151f24305dd67e6d1d5f13aced7b04b6c97 Mon Sep 17 00:00:00 2001
From: Michael Teyfel <mteyfel@de.adit-jv.com>
Date: Wed, 11 Oct 2017 17:17:29 +0200
Subject: [PATCH 15/15] window client: remove ivi-application support

Signed-off-by: Michael Teyfel <mteyfel@de.adit-jv.com>
---
 Makefile.am      |  2 --
 clients/window.c | 44 +-------------------------------------------
 2 files changed, 1 insertion(+), 45 deletions(-)

diff --git a/Makefile.am b/Makefile.am
index 20828df..d05bfd2 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -664,8 +664,6 @@ nodist_libtoytoolkit_la_SOURCES =			\
 	protocol/viewporter-client-protocol.h		\
 	protocol/xdg-shell-unstable-v6-protocol.c			\
 	protocol/xdg-shell-unstable-v6-client-protocol.h		\
-	protocol/ivi-application-protocol.c		\
-	protocol/ivi-application-client-protocol.h	\
 	protocol/pointer-constraints-unstable-v1-protocol.c		\
 	protocol/pointer-constraints-unstable-v1-client-protocol.h	\
 	protocol/relative-pointer-unstable-v1-protocol.c		\
diff --git a/clients/window.c b/clients/window.c
index 81fb674..5e9d3e7 100644
--- a/clients/window.c
+++ b/clients/window.c
@@ -82,10 +82,6 @@ typedef void *EGLContext;
 
 #include "window.h"
 
-#include <sys/types.h>
-#include "ivi-application-client-protocol.h"
-#define IVI_SURFACE_ID 9000
-
 #define ZWP_RELATIVE_POINTER_MANAGER_V1_VERSION 1
 #define ZWP_POINTER_CONSTRAINTS_V1_VERSION 1
 
@@ -107,7 +103,6 @@ struct display {
 	struct wl_data_device_manager *data_device_manager;
 	struct text_cursor_position *text_cursor_position;
 	struct zxdg_shell_v6 *xdg_shell;
-	struct ivi_application *ivi_application; /* ivi style shell */
 	struct zwp_relative_pointer_manager_v1 *relative_pointer_manager;
 	struct zwp_pointer_constraints_v1 *pointer_constraints;
 	EGLDisplay dpy;
@@ -269,8 +264,6 @@ struct window {
 	struct window *parent;
 	struct window *last_parent;
 
-	struct ivi_surface *ivi_surface;
-
 	struct window_frame *frame;
 
 	/* struct surface::link, contains also main_surface */
@@ -1440,19 +1433,6 @@ window_get_display(struct window *window)
 }
 
 static void
-handle_ivi_surface_configure(void *data, struct ivi_surface *ivi_surface,
-                             int32_t width, int32_t height)
-{
-	struct window *window = data;
-
-	window_schedule_resize(window, width, height);
-}
-
-static const struct ivi_surface_listener ivi_surface_listener = {
-        handle_ivi_surface_configure,
-};
-
-static void
 surface_create_surface(struct surface *surface, uint32_t flags)
 {
 	struct display *display = surface->window->display;
@@ -1602,9 +1582,6 @@ window_destroy(struct window *window)
 	if (window->xdg_surface)
 		zxdg_surface_v6_destroy(window->xdg_surface);
 
-	if (window->ivi_surface)
-		ivi_surface_destroy(window->ivi_surface);
-
 	surface_destroy(window->main_surface);
 
 	wl_list_remove(&window->link);
@@ -5185,7 +5162,7 @@ window_create_internal(struct display *display, int custom)
 	surface = surface_create(window);
 	window->main_surface = surface;
 
-	assert(custom || display->xdg_shell || display->ivi_application);
+	assert(custom || display->xdg_shell);
 
 	window->custom = custom;
 	window->preferred_format = WINDOW_PREFERRED_FORMAT_NONE;
@@ -5205,7 +5182,6 @@ struct window *
 window_create(struct display *display)
 {
 	struct window *window;
-	uint32_t id_ivisurf;
 
 	window = window_create_internal(display, 0);
 
@@ -5228,16 +5204,6 @@ window_create(struct display *display)
 		window_inhibit_redraw(window);
 
 		wl_surface_commit(window->main_surface->surface);
-	} else if (display->ivi_application) {
-		/* auto generation of ivi_id based on process id + basement of id */
-		id_ivisurf = IVI_SURFACE_ID + (uint32_t)getpid();
-		window->ivi_surface =
-			ivi_application_surface_create(display->ivi_application,
-						       id_ivisurf, window->main_surface->surface);
-		fail_on_null(window->ivi_surface, 0, __FILE__, __LINE__);
-
-		ivi_surface_add_listener(window->ivi_surface,
-					 &ivi_surface_listener, window);
 	}
 
 	return window;
@@ -5992,11 +5958,6 @@ registry_handle_global(void *data, struct wl_registry *registry, uint32_t id,
 			wl_registry_bind(registry, id,
 					 &wl_subcompositor_interface, 1);
 	}
-	else if (strcmp(interface, "ivi_application") == 0) {
-		d->ivi_application =
-			wl_registry_bind(registry, id,
-					 &ivi_application_interface, 1);
-	}
 
 	if (d->global_handler)
 		d->global_handler(d, id, interface, version, d->user_data);
@@ -6295,9 +6256,6 @@ display_destroy(struct display *display)
 	if (display->xdg_shell)
 		zxdg_shell_v6_destroy(display->xdg_shell);
 
-	if (display->ivi_application)
-		ivi_application_destroy(display->ivi_application);
-
 	if (display->shm)
 		wl_shm_destroy(display->shm);
 
-- 
2.7.4

